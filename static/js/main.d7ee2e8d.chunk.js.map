{"version":3,"sources":["components/Button.js","components/Display.js","App.js","reportWebVitals.js","store/reducer.js","index.js"],"names":["Button","props","className","onClick","click","text","Display","fnum","op","snum","answer","App","nums","useSelector","state","buttons","ops","useState","setFnum","setSnum","flag","setFlag","setAnswer","numsClick","console","log","join","map","el","index","e","target","innerText","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","list","store","createStore","action","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAUeA,G,MARA,SAACC,GACd,OACE,wBAAQC,UAAU,oBAAoBC,QAASF,EAAMG,MAArD,SACGH,EAAMI,SCUEC,EAbC,SAACL,GACf,OACE,sBAAKC,UAAU,UAAf,UACE,sBAAKA,UAAU,UAAf,UACE,8BAAMD,EAAMM,OACZ,8BAAMN,EAAMO,KACZ,8BAAMP,EAAMQ,UAEd,qBAAKP,UAAU,SAAf,SAAyBD,EAAMS,aC2EtBC,EA/EH,WACV,IAAMC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMC,WACpCC,EAAMH,aAAY,SAACC,GAAD,OAAWA,EAAME,OAFzB,EAGQC,mBAAS,IAHjB,mBAGTV,EAHS,KAGHW,EAHG,OAIQD,mBAAS,IAJjB,mBAITR,EAJS,KAIHU,EAJG,OAKQF,mBAAS,IALjB,mBAKTG,EALS,KAKHC,EALG,OAMYJ,mBAAS,IANrB,mBAMTP,EANS,KAMDY,EANC,KAcVC,EAAY,SAAClB,GAcjB,GAbIe,EACW,MAATf,EACFmB,QAAQC,IAAI,YAEZN,EAAQ,GAAD,mBAAKV,GAAL,CAAWJ,KAGP,MAATA,EACFmB,QAAQC,IAAI,YAEZP,EAAQ,GAAD,mBAAKX,GAAL,CAAWF,KAGT,MAATA,GAAgBe,EAClB,OAAQA,GACN,IAAK,IACHE,GAAWf,EAAKmB,KAAK,MAAOjB,EAAKiB,KAAK,KACtC,MACF,IAAK,IACHJ,GAAWf,EAAKmB,KAAK,KAAOjB,EAAKiB,KAAK,KACtC,MACF,IAAK,IACHJ,GAAWf,EAAKmB,KAAK,KAAOjB,EAAKiB,KAAK,KACtC,MACF,IAAK,IACHJ,GAAWf,EAAKmB,KAAK,KAAOjB,EAAKiB,KAAK,KACtC,MACF,QACEF,QAAQC,IAAI,sBAGL,MAATpB,IArCJiB,EAAU,IACVD,EAAQ,IACRF,EAAQ,IACRD,EAAQ,MAoCV,OACE,sBAAKhB,UAAU,YAAf,UACE,cAAC,EAAD,CAASK,KAAMA,EAAME,KAAMA,EAAMD,GAAIY,EAAMV,OAAQA,IACnD,sBAAKR,UAAU,UAAf,UACE,qBAAKA,UAAU,OAAf,SACGU,EAAKe,KAAI,SAACC,EAAIC,GACb,OACE,cAAC,EAAD,CACEzB,MAAO,SAAC0B,GAAD,OAAOP,EAAUO,EAAEC,OAAOC,YACjC3B,KAAMuB,GACDC,QAKb,qBAAK3B,UAAU,MAAf,SACGc,EAAIW,KAAI,SAACC,EAAIC,GACZ,OACE,cAAC,EAAD,CACEzB,MAAO,SAAC0B,GAAD,OAAOT,EAAQS,EAAEC,OAAOC,YAC/B3B,KAAMuB,GACDC,eC/DNI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCPRQ,EAAe,CACnBC,KAAM,GACN5B,QAAS,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACjEC,IAAK,CAAC,IAAK,IAAK,IAAK,MCOvB,IAAM4B,EAAQC,aDJP,WAAgD,IAA/B/B,EAA8B,uDAAtB4B,EAAcI,EAAQ,uCAGhD,OAFIA,EAAOC,KAEJ,eACFjC,MCEXkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,SAM1BnB,M","file":"static/js/main.d7ee2e8d.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Button = (props) => {\n  return (\n    <button className=\"btn btn-secondary\" onClick={props.click}>\n      {props.text}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\n\nconst Display = (props) => {\n  return (\n    <div className=\"display\">\n      <div className=\"problem\">\n        <div>{props.fnum}</div>\n        <div>{props.op}</div>\n        <div>{props.snum}</div>\n      </div>\n      <div className=\"answer\">{props.answer}</div>\n    </div>\n  );\n};\n\nexport default Display;\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./App.css\";\nimport Button from \"./components/Button\";\nimport Display from \"./components/Display\";\n\nconst App = () => {\n  const nums = useSelector((state) => state.buttons);\n  const ops = useSelector((state) => state.ops);\n  const [fnum, setFnum] = useState([]);\n  const [snum, setSnum] = useState([]);\n  const [flag, setFlag] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n\n  const reset = () => {\n    setAnswer(\"\");\n    setFlag(\"\");\n    setSnum([]);\n    setFnum([]);\n  };\n  const numsClick = (text) => {\n    if (flag) {\n      if (text === \"=\") {\n        console.log(\"Not here\");\n      } else {\n        setSnum([...snum, text]);\n      }\n    } else {\n      if (text === \"=\") {\n        console.log(\"Not here\");\n      } else {\n        setFnum([...fnum, text]);\n      }\n    }\n    if (text === \"=\" && flag) {\n      switch (flag) {\n        case \"+\":\n          setAnswer(+fnum.join(\"\") + +snum.join(\"\"));\n          break;\n        case \"-\":\n          setAnswer(+fnum.join(\"\") - +snum.join(\"\"));\n          break;\n        case \"*\":\n          setAnswer(+fnum.join(\"\") * +snum.join(\"\"));\n          break;\n        case \"/\":\n          setAnswer(+fnum.join(\"\") / +snum.join(\"\"));\n          break;\n        default:\n          console.log(\"What is going on ?\");\n      }\n    }\n    if (text === \"E\") reset();\n  };\n  return (\n    <div className=\"container\">\n      <Display fnum={fnum} snum={snum} op={flag} answer={answer} />\n      <div className=\"buttons\">\n        <div className=\"nums\">\n          {nums.map((el, index) => {\n            return (\n              <Button\n                click={(e) => numsClick(e.target.innerText)}\n                text={el}\n                key={index}\n              />\n            );\n          })}\n        </div>\n        <div className=\"ops\">\n          {ops.map((el, index) => {\n            return (\n              <Button\n                click={(e) => setFlag(e.target.innerText)}\n                text={el}\n                key={index}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\n  list: [],\n  buttons: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"E\", \"0\", \"=\"],\n  ops: [\"+\", \"-\", \"*\", \"/\"],\n};\n\nexport function Reducer(state = initialState, action) {\n  switch (action.type) {\n    default:\n      return {\n        ...state,\n      };\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Reducer } from \"./store/reducer\";\n\nconst store = createStore(Reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}